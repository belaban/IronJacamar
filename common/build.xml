<!--
 * JBoss, Home of Professional Open Source.
 * Copyright 2008-2010, Red Hat Middleware LLC, and individual contributors
 * as indicated by the @author tags. See the copyright.txt file in the
 * distribution for a full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->
<project name="ironjacamar-common" 
         default="compile" 
         xmlns:ivy="antlib:org.apache.ivy.ant">
  
  <!-- ================================= 
       Properties              
       ================================= -->
  <property name="build.common.dir" value="${build.dir}/common" />
  
  <!-- ================================= 
       Target: compile
       ================================= -->
  <target name="compile">
    <mkdir dir="${build.common.dir}" />
    
    <javac srcdir="src/main"
           destdir="${build.common.dir}"
           classpathref="sjc.lib.path.id"
           debug="${javac.debug}">
      <compilerarg value="-Xlint"/>
    </javac>
    
  </target>
  
  <!-- ================================= 
       Target: jars
       ================================= -->
  <target name="jars" depends="compile">
    <jar destfile="${target.dir}/${name}-common-api.jar"
         basedir="${build.common.dir}"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"
         includes="**/common/api/**">
      <manifest>
	<attribute name="Implementation-Title" value="IronJacamar Common API"/>
	<attribute name="Implementation-Version" value="${major}.${minor}.${patch}.${type}"/>
	<attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.jboss.org/ironjacamar)"/>
	<attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>

    <jar destfile="${target.dir}/${name}-common-impl.jar"
         basedir="${build.common.dir}"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"
         excludes="**/*.java, **/common/api/**">
      <manifest>
	<attribute name="Implementation-Title" value="IronJacamar Common Implementation"/>
	<attribute name="Implementation-Version" value="${major}.${minor}.${patch}.${type}"/>
	<attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.jboss.org/ironjacamar)"/>
	<attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>
  </target>
  
  <!-- ================================= 
       Target: docs
       ================================= -->
  <target name="docs" depends="compile">
    <mkdir dir="${target.dir}/docs/common"/>
    <javadoc packagenames="org.*"
             sourcepath="src/main/java"
             destdir="${target.dir}/docs/common"
             doclet="org.jboss.apiviz.APIviz"
             docletpathref="sjc.lib.path.id"
             author="true"
             version="true"
             windowtitle="IronJacamar Common"
             doctitle="IronJacamar Common"
             use="true"
             additionalparam="-author -version"
             classpath="${build.common.dir}"
             classpathref="sjc.lib.path.id"
             bottom="Copyright &#169; 2008 Red Hat Middleware LLC (http://www.jboss.com/)">
      <link offline="true" href="http://java.sun.com/j2se/5/docs/api/" packagelistLoc="${java.home}/../docs/api"/>
    </javadoc>
    <copy todir="${target.dir}/docs/common" overwrite="true">
      <fileset dir="${tools.dir}/api"/>
    </copy>
  </target>
  
  <!-- ================================= 
       Target: test
       ================================= -->
  <target name="test" depends="jars, prepare-test">
    <mkdir dir="${reports.dir}" />
    <mkdir dir="${reports.dir}/common" />
    
    <junit dir="src/test"
           printsummary="${junit.printsummary}"
           haltonerror="${junit.haltonerror}"
           haltonfailure="${junit.haltonfailure}"
           fork="${junit.fork}"
           timeout="${junit.timeout}">
      
      <jvmarg line="${junit.jvm.options}" />
      <sysproperty key="archives.dir" value="${build.common.dir}" />
      <sysproperty key="java.util.logging.manager" value="org.jboss.logmanager.LogManager" />
      <sysproperty key="log4j.defaultInitOverride" value="true" />
      <sysproperty key="org.jboss.logging.Logger.pluginClass" value="org.jboss.logging.logmanager.LoggerPluginImpl" />
      <sysproperty key="test.dir" value="${test.dir}" />
      <sysproperty key="xb.builder.useUnorderedSequence" value="true" />
      <sysproperty key="javax.xml.stream.XMLInputFactory" value="com.sun.xml.internal.stream.XMLInputFactoryImpl" />
      
      <classpath>
	<pathelement location="${build.common.dir}/test" />
	<fileset dir="${target.dir}" includes="*.jar" />
	<fileset dir="${lib.dir}/common" includes="*.jar" />
	<fileset dir="${lib.dir}/embedded" includes="*.jar" />
	<fileset dir="${lib.dir}/arquillian" includes="*.jar" />
	<fileset dir="${lib.dir}/sjc" includes="*.jar" />
	<fileset dir="${lib.dir}/test" includes="*.jar" />
      </classpath>
      
      <formatter type="plain" />
      <formatter type="xml" />
      
      <batchtest todir="${reports.dir}/common" 
                 haltonerror="${junit.batchtest.haltonerror}"
                 haltonfailure="${junit.batchtest.haltonfailure}"
                 fork="${junit.batchtest.fork}">
        
	<fileset dir="${build.common.dir}/test">
	  <include name="**/*TestCase.class" />
	</fileset>
      </batchtest>
      
    </junit>
    
  </target>
  
  
  <!-- ================================= 
       Target: one-test
       ================================= -->
  <target name="one-test" depends="jars, prepare-test">
    <mkdir dir="${reports.dir}" />
    <mkdir dir="${reports.dir}/common" />
    
    <junit dir="src/test" 
           printsummary="${junit.printsummary}" 
           haltonerror="${junit.haltonerror}" 
           haltonfailure="${junit.haltonfailure}" 
           fork="${junit.fork}" 
           timeout="${junit.timeout}">
      
      <jvmarg line="${junit.jvm.options}" />
      <sysproperty key="archives.dir" value="${build.common.dir}" />
      <sysproperty key="java.util.logging.manager" value="org.jboss.logmanager.LogManager" />
      <sysproperty key="log4j.defaultInitOverride" value="true" />
      <sysproperty key="org.jboss.logging.Logger.pluginClass" value="org.jboss.logging.logmanager.LoggerPluginImpl" />
      <sysproperty key="test.dir" value="${test.dir}" />
      <sysproperty key="xb.builder.useUnorderedSequence" value="true" />
      <sysproperty key="javax.xml.stream.XMLInputFactory" value="com.sun.xml.internal.stream.XMLInputFactoryImpl" />
      
      <classpath>
	<pathelement location="${build.common.dir}/test" />
	<fileset dir="${target.dir}" includes="*.jar" />
	<fileset dir="${lib.dir}/common" includes="*.jar" />
	<fileset dir="${lib.dir}/embedded" includes="*.jar" />
	<fileset dir="${lib.dir}/arquillian" includes="*.jar" />
	<fileset dir="${lib.dir}/sjc" includes="*.jar" />
	<fileset dir="${lib.dir}/test" includes="*.jar" />
      </classpath>
      
      <formatter type="plain" />
      <formatter type="xml" />
      
      <test todir="${reports.dir}/common" 
            name="${test}" 
            haltonerror="${junit.batchtest.haltonerror}" 
            haltonfailure="${junit.batchtest.haltonfailure}" 
            fork="${junit.batchtest.fork}" />
    </junit>
  </target>
  
  <!-- ================================= 
       Target: prepare-test
       ================================= -->
  <target name="prepare-test">
    <mkdir dir="${build.common.dir}" />
    <mkdir dir="${build.common.dir}/test" />
    
    <javac srcdir="src/test" 
           destdir="${build.common.dir}/test"
           classpathref="test.lib.path.id"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           optimize="${javac.optimize}">
      <compilerarg value="-Xlint" />
    </javac>
    
    <copy todir="${build.common.dir}/test">
      <fileset dir="src/test/resources" />
    </copy>
  </target>
  
</project>
